n_states_tot <- c()
times <- c()
for (i in n_rep) {
print(i)
n_states <- seq(2, 1000, 20)
n_states_tot <- c(n_states_tot, n_states)
times <- c(times, unlist(lapply(n_states, mean_random_mat)))
}
tab <- tibble(n_states = n_states, time = times)
tab <- tibble(n_states = n_states_tot, time = times)
tab |> ggplot() +
geom_point(aes(n_states, time))
tab <- tibble(n_states = n_states_tot, time = times)
tab |> ggplot() +
geom_boxplot(aes(n_states, time))
tab <- tibble(n_states = n_states_tot, time = times)
tab |> ggplot() +
geom_boxplot(aes(n_states, time, group = n_states))
tab <- tibble(n_states = n_states_tot, time = times)
tab |> ggplot() +
geom_point(aes(n_states, time, group = n_states))
tab <- tibble(n_states = n_states_tot, time = times)
tab |>
group_by(n_states) |>
mutate(time = median(time)) +
ggplot() +
geom_point(aes(n_states, time))
tab <- tibble(n_states = n_states_tot, time = times)
tab |>
group_by(n_states) |>
mutate(time = median(time)) |>
ggplot() +
geom_point(aes(n_states, time))
n_rep <- 1:3
n_states_tot <- c()
times <- c()
for (i in n_rep) {
print(i)
n_states <- seq(2, 2000, 50)
n_states_tot <- c(n_states_tot, n_states)
times <- c(times, unlist(lapply(n_states, mean_random_mat)))
}
set.seed(10)
n_rep <- 1:3
n_states_tot <- c()
times <- c()
for (i in n_rep) {
print(i)
n_states <- seq(2, 2000, 50)
n_states_tot <- c(n_states_tot, n_states)
times <- c(times, unlist(lapply(n_states, mean_random_mat)))
}
set.seed(10)
n_rep <- 1:3
n_states_tot <- c()
times <- c()
for (i in n_rep) {
print(i)
n_states <- seq(2, 1000, 50)
n_states_tot <- c(n_states_tot, n_states)
times <- c(times, unlist(lapply(n_states, mean_random_mat)))
}
tab <- tibble(n_states = n_states_tot, time = times)
tab |>
group_by(n_states) |>
mutate(time = median(time)) |>
ggplot() +
geom_point(aes(n_states, time))
?try
set.seed(10)
n_rep <- 1:3
n_states_tot <- c()
times <- c()
for (i in n_rep) {
print(i)
n_states <- seq(2, 2000, 50)
n_states_tot <- c(n_states_tot, n_states)
times <- c(times, unlist(lapply(n_states, function(i) try(mean_random_mat(x), TRUE))))
}
tab <- tibble(n_states = n_states_tot, time = times)
tab |>
group_by(n_states) |>
mutate(time = median(time)) |>
ggplot() +
geom_point(aes(n_states, time))
set.seed(10)
n_rep <- 1:3
n_states_tot <- c()
times <- c()
for (i in n_rep) {
print(i)
n_states <- seq(2, 2000, 50)
n_states_tot <- c(n_states_tot, n_states)
times <- c(times, unlist(lapply(n_states, function(i) try(mean_random_mat(i), TRUE))))
}
tab <- tibble(n_states = n_states_tot, time = times)
tab |>
group_by(n_states) |>
mutate(time = median(time)) |>
ggplot() +
geom_point(aes(n_states, time))
tab
tab <- tibble(n_states = n_states_tot, time = times) |>
filter(letters %in% time)
tab <- tibble(n_states = n_states_tot, time = times) |>
filter('a' %in% time)
tab
tab <- tibble(n_states = n_states_tot, time = times) |>
filter('e' %in% time)
tab
times
as.numeric(times)
?median
tab <- tibble(n_states = n_states_tot, time = as.numeric(times))
tab |>
group_by(n_states) |>
mutate(time = median(time, na.rm = T)) |>
ggplot() +
geom_point(aes(n_states, time))
exp.model <-lm(n_states ~ exp(time), tab)
exp.model
tab |>
group_by(n_states) |>
mutate(time = median(time, na.rm = T)) |>
ggplot() +
geom_point(aes(n_states, time)) +
geom_smooth(method="lm", formula= (n_states ~ exp(time)),
se=FALSE, linetype = 1)
tab |>
group_by(n_states) |>
mutate(time = median(time, na.rm = T)) |>
ggplot() +
geom_point(aes(n_states, time)) +
geom_smooth(aes(n_states, time),
method="lm", formula= (y ~ exp(x)),
se=FALSE, linetype = 1)
tab |>
group_by(n_states) |>
mutate(time = median(time, na.rm = T)) |>
ggplot() +
geom_point(aes(n_states, time)) +
geom_smooth(aes(n_states, time),
method="lm", formula= y ~ exp(x),
se=FALSE, linetype = 1)
tab |>
group_by(n_states) |>
mutate(time = median(time, na.rm = T)) |>
ggplot() +
geom_point(aes(n_states, time)) +
geom_smooth(aes(n_states, time),
method="lm", formula= (n_states ~ exp(time)),
se=FALSE, linetype = 1)
tab |>
group_by(n_states) |>
mutate(time = median(time, na.rm = T)) |>
ggplot() +
geom_point(aes(n_states, time)) +
geom_smooth(aes(n_states, time),
method="lm",
se=FALSE, linetype = 1)
tab |>
group_by(n_states) |>
mutate(time = median(time, na.rm = T)) |>
ggplot() +
geom_point(aes(n_states, time)) +
geom_smooth(aes(n_states, time),
method="lm", formula = y ~ exp(x),
se=FALSE, linetype = 1)
log.model.df <- data.frame(x = df$time,
y = exp(fitted(exp.model)))
log.model.df
log.model.df <- data.frame(x = tab$time,
y = exp(fitted(exp.model)))
tab <- tibble(n_states = n_states_tot, time = as.numeric(times)) |>
group_by(n_states) |>
mutate(time = median(time, na.rm = T))
exp.model <-lm(n_states ~ exp(time), tab)
log.model.df <- data.frame(x = tab$time,
y = exp(fitted(exp.model)))
tab |>
ggplot() +
geom_point(aes(n_states, time)) +
geom_smooth(aes(n_states, time),
method="lm", formula = y ~ exp(x),
se=FALSE, linetype = 1)
exp.model.df <- data.frame(x = tab$time,
y = exp(fitted(exp.model)))
exp.model.df
exp.model
exp.model.df <- data.frame(x = tab$time,
y = fitted(exp.model))
exp.model.df
tab
exp.model
exp.model.df <- data.frame(x = tab$n_states,
y = fitted(exp.model))
exp.model.df
predict(exp.model)
exp.model.df <- data.frame(x = tab$n_states,
y = predict(exp.model))
exp.model.df
predict(exp.model)
exp.model.df <- data.frame(x = tab$n_states,
y = log(predict(exp.model)))
exp.model.df
exp.model.df <- data.frame(x = tab$n_states,
y = predict(exp.model))
tab |>
ggplot() +
geom_point(aes(n_states, time)) +
geom_smooth(aes(n_states, time),
method="lm", formula = y ~ exp(x),
se=FALSE, linetype = 1)
tab |>
ggplot() +
geom_point(aes(n_states, time)) +
geom_smooth(aes(n_states, time),
formula = y ~ exp(x),
se=FALSE, linetype = 1)
tab <- tibble(n_states_2 = n_states_tot, time = as.numeric(times)) |>
group_by(n_states_2) |>
mutate(time = median(time, na.rm = T))
exp.model <-lm(n_states_2 ~ exp(time), tab)
exp.model.df <- data.frame(x = tab$n_states_2,
y = predict(exp.model))
tab |>
ggplot() +
geom_point(aes(n_states_2, time)) +
geom_smooth(aes(n_states_2, time),
method="lm",
formula = y ~ exp(x),
se=FALSE, linetype = 1)
tab |>
ggplot() +
geom_point(aes(n_states_2, time)) +
geom_smooth(aes(n_states_2, time),
method="lm",
formula = log(y) ~ x,
se=FALSE, linetype = 1)
tab |>
ggplot() +
geom_point(aes(n_states_2, time)) +
geom_smooth(aes(n_states_2, time),
method="lm",
formula = y ~ x,
se=FALSE, linetype = 1)
tab |>
ggplot() +
geom_point(aes(n_states_2, time)) +
geom_smooth(aes(n_states_2, time),
method="lm",
formula = y ~ exp(x),
se=FALSE, linetype = 1)
exp.model
exp.model.df <- data.frame(predict(exp.model))
exp.model.df
exp.model.df <- data.frame(x = tab$n_states_2,
y = predict(exp.model))
exp.model.df <- data.frame(x = tab$n_states_2,
y = log(predict(exp.model)))
exp.model.df
tab |>
ggplot() +
geom_point(aes(n_states_2, time)) +
geom_line(aes(x, y),
data = exp.model.df)
time
exp.model <- lm(n_states_2 ~ exp(time), tab)
exp.model.df <- data.frame(x = tab$n_states_2,
y = log(predict(exp.model)))
tab |>
ggplot() +
geom_point(aes(n_states_2, time)) +
geom_line(aes(x, y),
data = exp.model.df)
tab <- tibble(n_states_2 = n_states_tot, time = as.numeric(times)) |>
group_by(n_states_2) |>
mutate(time = median(time, na.rm = T))
exp.model <- lm(n_states_2 ~ exp(time), tab)
exp.model.df <- data.frame(x = 1:1000,
y = log(predict(exp.model, tibble(time = 1:1000))))
tab |>
ggplot() +
geom_point(aes(n_states_2, time)) +
geom_line(aes(x, y),
data = exp.model.df)
tab <- tibble(n_states_2 = n_states_tot, time = as.numeric(times)) |>
group_by(n_states_2) |>
mutate(time = median(time, na.rm = T))
tab |>
ggplot() +
geom_point(aes(n_states_2, time)) +
geom_line(aes(x, y),
data = exp.model.df)
tab <- tibble(n_states_2 = n_states_tot, time = as.numeric(times)) |>
group_by(n_states_2) |>
mutate(time = median(time, na.rm = T))
tab |>
ggplot() +
geom_point(aes(n_states_2, time))
tab <- tibble(n_states_2 = n_states_tot, time = as.numeric(times)) |>
group_by(n_states_2) |>
mutate(time = median(time, na.rm = T))
tab |>
ggplot() +
geom_point(aes(n_states_2, time)) +
geom_smooth(aes(n_states_2, time),
method = "glm", family = "exponential")
tab |>
ggplot(aes(n_states_2, time)) +
geom_point() +
geom_smooth(method = "glm", family = "exponential") +
geom_smooth(method="lm", formula= (y ~ exp(x)), se=FALSE, color=1)
tab
exp_model <- lm(time ~ exp(n_states_2))
tab |>
ggplot(aes(n_states_2, time)) +
geom_point() +
geom_smooth(method = "glm", family = "exponential") +
geom_smooth(method="lm", formula = (y ~ exp(x)), se=FALSE)
tab |>
ggplot(aes(n_states_2, time)) +
geom_point() +
geom_smooth(method="lm", formula = (exp(y) ~ x), se=FALSE)
tab |>
ggplot(aes(n_states_2, time)) +
geom_point()
exp_model <- lm(time ~ exp(n_states_2))
exp_model <- lm(time ~ exp(n_states_2), dat = tab)
exp_model <- lm(time ~ n_states_2, dat = tab)
exp_model <- lm(exp(time) ~ n_states_2, dat = tab)
exp_model
predict(exp_model)
log(predict(exp_model))
tab |>
ggplot(aes(n_states_2, time)) +
geom_point()
tab <- tibble(n_states_2 = n_states_tot, time = as.numeric(times)) |>
group_by(n_states_2) |>
mutate(time = median(time, na.rm = T)) |>
drop_na()
tab |>
ggplot(aes(n_states_2, time)) +
geom_point()
tab
tab <- tibble(n_states_2 = n_states_tot, time = as.numeric(times)) |>
group_by(n_states_2) |>
mutate(time = median(time, na.rm = T)) |>
ungroup() +
drop_na()
tab <- tibble(n_states_2 = n_states_tot, time = as.numeric(times)) |>
group_by(n_states_2) |>
mutate(time = median(time, na.rm = T)) |>
ungroup() |>
drop_na()
tab |>
ggplot(aes(n_states_2, time)) +
geom_point()
exp_model <- lm(formula = log(time) ~ n_states_2, data = tab)
exp_model
tab |>
ggplot(aes(n_states_2, time)) +
geom_point() +
scale_x_continuous(trans = 'exp')
tab |>
ggplot(aes(n_states_2, time)) +
geom_point() +
scale_y_continuous(trans = 'exp')
tab |>
ggplot(aes(n_states_2, time)) +
geom_point() +
scale_y_continuous(trans = 'log')
tab |>
ggplot(aes(n_states_2, time)) +
geom_point() +
scale_x_continuous(trans = 'exp')
tab |>
ggplot(aes(n_states_2, time)) +
geom_point() +
scale_x_continuous(trans = 'log')
tab |>
ggplot(aes(n_states_2, time)) +
geom_point() +
scale_x_continuous(trans = 'exp')
tab |>
ggplot(aes(n_states_2, time)) +
geom_point() +
scale_y_continuous(trans = 'exp')
tab |>
ggplot(aes(n_states_2, time)) +
geom_point() +
scale_y_continuous(trans = 'log')
tab |>
ggplot(aes(n_states_2, time)) +
geom_point() +
geom_smooth(formula = log(y) ~ x, method = 'lm')
tab <- tibble(n_states_2 = n_states_tot, time = as.numeric(times)) |>
group_by(n_states_2) |>
mutate(time = median(time, na.rm = T)) |>
ungroup() |>
drop_na()
tab |>
ggplot(aes(n_states_2, time)) +
geom_point()
var_random_mat <- function(n) {
mat <- matrix(sample(0:10, (n+1)*(n+1), replace = T), nrow = n+1)
diag(mat) <- rep(0, n+1)
diag(mat) <- -rowSums(mat)
mat <- mat[1:n,1:n]
init <- c(1, rep(0, n-1))
start_time <- Sys.time()
try()
var(PH(mat, init))
end_time <- Sys.time()
as.numeric(end_time - start_time)
}
set.seed(10)
n_rep <- 1:3
n_states_tot <- c()
times <- c()
for (i in n_rep) {
print(i)
n_states <- seq(2, 2000, 50)
n_states_tot <- c(n_states_tot, n_states)
times <- c(times, unlist(lapply(n_states, function(i) try(var_random_mat(i), TRUE))))
}
var_random_mat(6)
var_random_mat <- function(n) {
mat <- matrix(sample(0:10, (n+1)*(n+1), replace = T), nrow = n+1)
diag(mat) <- rep(0, n+1)
diag(mat) <- -rowSums(mat)
mat <- mat[1:n,1:n]
init <- c(1, rep(0, n-1))
start_time <- Sys.time()
var(PH(mat, init))
end_time <- Sys.time()
as.numeric(end_time - start_time)
}
var_random_mat(6)
set.seed(10)
n_rep <- 1:3
n_states_tot <- c()
times <- c()
for (i in n_rep) {
print(i)
n_states <- seq(2, 2000, 50)
n_states_tot <- c(n_states_tot, n_states)
times <- c(times, unlist(lapply(n_states, function(i) try(var_random_mat(i), TRUE))))
}
tab <- tibble(n_states_2 = n_states_tot, time = as.numeric(times)) |>
group_by(n_states_2) |>
mutate(time = median(time, na.rm = T)) |>
ungroup() |>
drop_na()
tab |>
ggplot(aes(n_states_2, time)) +
geom_point()
mean_random_mat <- function(n) {
mat <- matrix(sample(0:10, (n+1)*(n+1), replace = T), nrow = n+1)
diag(mat) <- rep(0, n+1)
diag(mat) <- -rowSums(mat)
mat <- mat[1:n,1:n]
init <- sample(0:10, n+1, replace = T)
init <- init/sum(init)
init <- init[1:n]
start_time <- Sys.time()
mean(PH(mat, init))
end_time <- Sys.time()
as.numeric(end_time - start_time)
}
set.seed(10)
n_rep <- 1:3
n_states_tot <- c()
times <- c()
for (i in n_rep) {
print(i)
n_states <- seq(2, 2000, 50)
n_states_tot <- c(n_states_tot, n_states)
times <- c(times, unlist(lapply(n_states, function(i) try(mean_random_mat(i), TRUE))))
}
tab <- tibble(n_states_2 = n_states_tot, time = as.numeric(times)) |>
group_by(n_states_2) |>
mutate(time = median(time, na.rm = T)) |>
ungroup() |>
drop_na()
tab |>
ggplot(aes(n_states_2, time)) +
geom_point()
tab <- tibble(n_states_2 = n_states_tot, time = as.numeric(times)) |>
group_by(n_states_2) |>
mutate(time = mean(time, na.rm = T)) |>
ungroup() |>
drop_na()
tab |>
ggplot(aes(n_states_2, time)) +
geom_point()
wrapper <- function(i) {
# print(i)
mutate(get_cor(i), n = i)
}
start_time <- Sys.time()
tab1 <- lapply(2:20, wrapper) %>%
reduce(bind_rows) %>%
as_tibble() %>%
mutate(
Var1 = factor(Var1, c('H', 'L', 'E', 'I')),
Var2 = factor(Var2, c('H', 'L', 'E', 'I')),
type = 'Correlation'
)
end_time <- Sys.time()
as.numeric(end_time - start_time)
end_time - start_time
